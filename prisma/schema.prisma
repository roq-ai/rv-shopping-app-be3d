generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model cart {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String      @db.Uuid
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  user       user        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cart_item  cart_item[]
}

model cart_item {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id String   @db.Uuid
  cart_id    String   @db.Uuid
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  cart       cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product    product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model product {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String      @db.VarChar(255)
  brand       String      @db.VarChar(255)
  price       Int
  size        String      @db.VarChar(255)
  color       String      @db.VarChar(255)
  retailer_id String      @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  cart_item   cart_item[]
  retailer    retailer    @relation(fields: [retailer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sale        sale[]
}

model retailer {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  product     product[]
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sale {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String   @db.VarChar(255)
  start_date          DateTime @db.Date
  end_date            DateTime @db.Date
  discount_percentage Int
  product_id          String   @db.Uuid
  created_at          DateTime @default(now()) @db.Timestamp(6)
  updated_at          DateTime @default(now()) @db.Timestamp(6)
  product             product  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  cart        cart[]
  retailer    retailer[]
}
